{"version":3,"sources":["../src/rng.js"],"names":["RNG","Error","seed","opts","strSeed","s","k","length","charCodeAt"],"mappings":";;;;;;;;;;IAAqBA,G;;;;;;;2BAKX;AACN,YAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;;yBAEKC,K,EAAMC,I,EAAM;AAChB,YAAM,IAAIF,KAAJ,CAAU,6BAAV,CAAN;AACD;;;0BAEMC,I,EAAMC,I,EAAM;AACjB,YAAM,IAAIF,KAAJ,CAAU,8BAAV,CAAN;AACD;;;0BAEMC,I,EAAMC,I,EAAM;AACjB;;AAEA,UAAID,UAAUA,OAAO,CAAjB,CAAJ,EAAyB;AACvB,eAAOA,IAAP;AACD,OAFD,MAEO;AACL,YAAIE,UAAU,KAAKF,IAAnB;AACA,YAAIG,IAAI,CAAR;;AAEA,aAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,QAAQG,MAA5B,EAAoC,EAAED,CAAtC,EAAyC;AACvCD,eAAKD,QAAQI,UAAR,CAAmBF,CAAnB,IAAwB,CAA7B;AACD;;AAED,eAAOD,CAAP;AACD;AACF;;;wBA/BW;AACV,YAAM,IAAIJ,KAAJ,CAAU,6BAAV,CAAN;AACD;;;;;;kBAHkBD,G","file":"rng.js","sourcesContent":["export default class RNG {\n  get name () {\n    throw new Error('RNG.name must be overridden')\n  }\n\n  next () {\n    throw new Error('RNG.next must be overridden')\n  }\n\n  seed (seed, opts) {\n    throw new Error('RNG.seed must be overridden')\n  }\n\n  clone (seed, opts) {\n    throw new Error('RNG.clone must be overridden')\n  }\n\n  _seed (seed, opts) {\n    // TODO: add entropy and stuff\n\n    if (seed === (seed | 0)) {\n      return seed\n    } else {\n      let strSeed = '' + seed\n      let s = 0\n\n      for (let k = 0; k < strSeed.length; ++k) {\n        s ^= strSeed.charCodeAt(k) | 0\n      }\n\n      return s\n    }\n  }\n}\n"]}